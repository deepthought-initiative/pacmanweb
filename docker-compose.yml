version: '3.8'
services:
  frontend:
    container_name: frontend
    volumes:
      - react_build:/frontend/dist 
    build:
      context: ./frontend
    ports: 
      - "8080:8080"
    command: npm run dev
  docs:
    container_name: docs
    volumes:
      - docs_build:/docs/_build/html
    build:
      context: ./docs
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
  rabbitmq:
    restart: always
    ports:
      - '5672:5672'
    hostname: pacmanweb-rabbit
    image:
      rabbitmq:3-management
  celery:
    restart: always
    container_name: celery
    command: celery -A pacmanweb.celery_app worker --loglevel=info  -c 10 -E
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
    links:
      - redis:redis
      - rabbitmq:rabbitmq
  backend:
    platform: linux/amd64
    container_name: backend
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .flaskenv
    depends_on:
      - redis
      - rabbitmq
      - celery
    links:
      - redis:redis
      - rabbitmq:rabbitmq
    command: gunicorn 'pacmanweb:create_app()' --access-logfile=- --bind 0.0.0.0:8000 --timeout 120 -w 17 --threads 4
  flower:
    restart: always
    container_name: flower
    command: celery -A pacmanweb.celery_app flower --basic-auth=default:barebones
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
      - celery
      - backend
    links:
      - redis:redis
      - rabbitmq:rabbitmq
      - celery:celery
    # expose:
    #   - 5555
    ports:
      - '5555:5555'
  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
      - ./nginx/htpasswd_docs:/etc/nginx/htpasswd_docs:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - react_build:/var/www/frontend
      - docs_build:/usr/share/nginx/docs
    depends_on:
      - backend
      - frontend  
      - celery
      - redis
      - flower
      - docs
volumes:
  react_build:
  docs_build:
