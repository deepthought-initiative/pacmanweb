services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - pacmanweb-react-build:/frontend/dist
    expose:
      - "8080"

  redis:
    image: redis:7.0.11-alpine
    restart: always
    expose:
      - "6379"
    volumes:
      - pacmanweb-redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_MAXMEMORY=500mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 300s
      timeout: 10s
      retries: 3

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=${REDIS_COMMANDER_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
    expose:
      - "8081"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    expose:
      - "5672"
      - "15672"
    hostname: pacmanweb-rabbit
    volumes:
      - pacmanweb-rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 300s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - .:/app
      - ./.env:/app/.env:ro
      - ./PACMan:/app/PACMan:rw
      - ./env:/app/env:ro
    command: celery -A pacmanweb.celery_app worker --loglevel=info -c 10 -E
    depends_on:
      - redis
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - OS_NAME=${OS_NAME}

  backend:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - ./pacmanweb:/app/pacmanweb
      - ./.env:/app/.env:ro
      - ./PACMan:/app/PACMan:rw
      - ./env:/app/env:ro
    expose:
      - "8000"
    depends_on:
      - redis
      - rabbitmq
      - celery
    command: gunicorn 'pacmanweb:create_app()' --bind 0.0.0.0:8000 --timeout 120 --worker-class gevent --access-logfile=-
    environment:
      - PYTHONUNBUFFERED=1
      - OS_NAME=${OS_NAME}

  flower:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - ./pacmanweb:/app/pacmanweb
      - ./.env:/app/.env:ro
      - ./env:/app/env:ro
    command: celery -A pacmanweb.celery_app flower
    expose:
      - "5555"
    depends_on:
      - redis
      - rabbitmq
      - celery
      - backend
    environment:
      - OS_NAME=${OS_NAME}

  nginx:
    image: nginx:1.21-alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
      - ./nginx/htpasswd_docs:/etc/nginx/htpasswd_docs:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - pacmanweb-react-build:/var/www/frontend:ro
      - pacmanweb-docs-build:/usr/share/nginx/docs:ro
    environment: 
      - DOMAIN_NAME=${DOMAIN_NAME}
      - SSL_CERT_FILE=${SSL_CERT_FILE}
      - SSL_KEY_FILE=${SSL_KEY_FILE}
    depends_on:
      - backend
      - frontend  
      - celery
      - redis
      - flower
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 300s
      timeout: 10s
      retries: 3

volumes:
  pacmanweb-react-build:
    driver: local
  pacmanweb-docs-build:
    driver: local
  pacmanweb-redis-data:
    driver: local
  pacmanweb-rabbitmq-data:
    driver: local
