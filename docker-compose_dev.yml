version: "3.8"
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - ./.env.dev:/frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "8080:8080"
    command: npm run dev
    # depends_on:
    #   - backend

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    hostname: pacmanweb-rabbit
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env.dev
    command: celery -A pacmanweb.celery_app worker --loglevel=info -E
    depends_on:
      - redis
      - rabbitmq

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env.dev
    ports:
      - 8000:8000
    depends_on:
      - redis
      - rabbitmq
    command: flask --app pacmanweb run --port 8000 --host 0.0.0.0 --debug

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env.dev
    command: celery -A pacmanweb.celery_app flower
    ports:
      - '5555:5555'
    depends_on:
      - redis
      - rabbitmq
      - celery
      - backend

volumes:
  redis_data:
  rabbitmq_data: