services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - ./.env:/frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - '8080:8080'
    command: npm run dev
  
  redis:
    image: redis:7.0.11-alpine
    ports:
      - '6379:6379'
    volumes:
      - pacmanweb-redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_MAXMEMORY=500mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    hostname: pacmanweb-rabbit
    volumes:
      - pacmanweb-rabbitmq-data:/var/lib/rabbitmq

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis

  celery:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - .:/app
      - ./.env:/app/.env:ro
      - ./PACMan:/app/PACMan:rw
      - ./env:/app/env:ro
    command: celery -A pacmanweb.celery_app worker --loglevel=info -c 10 -E
    depends_on:
      - redis
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - OS_NAME=${OS_NAME}

  backend:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - ./pacmanweb:/app/pacmanweb
      - ./.env:/app/.env:ro
      - ./PACMan:/app/PACMan:rw
      - ./env:/app/env:ro
    ports:
      - 8000:8000
    depends_on:
      - redis
      - rabbitmq
      - celery
    command: flask --app pacmanweb run --host 0.0.0.0 --port 8000 --debug
    environment:
      - PYTHONUNBUFFERED=1
      - OS_NAME=${OS_NAME}

  flower:
    build:
      context: .
      dockerfile: ./pacmanweb/Dockerfile
      args:
        - OS_NAME=${OS_NAME}
    volumes:
      - ./pacmanweb:/app/pacmanweb
      - ./.env:/app/.env:ro
      - ./env:/app/env:ro
    command: celery -A pacmanweb.celery_app flower
    ports:
      - '5555:5555'
    depends_on:
      - redis
      - rabbitmq
      - celery
      - backend
    environment:
      - OS_NAME=${OS_NAME}

volumes:
  pacmanweb-react-build:
    driver: local
  pacmanweb-docs-build:
    driver: local
  pacmanweb-redis-data:
    driver: local
  pacmanweb-rabbitmq-data:
    driver: local

